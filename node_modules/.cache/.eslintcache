[{"D:\\reacttut\\new\\src\\index.js":"1","D:\\reacttut\\new\\src\\App.js":"2","D:\\reacttut\\new\\src\\Main.jsx":"3","D:\\reacttut\\new\\src\\About.jsx":"4","D:\\reacttut\\new\\src\\Search.jsx":"5","D:\\reacttut\\new\\src\\Error.jsx":"6"},{"size":291,"mtime":1656669353539,"results":"7","hashOfConfig":"8"},{"size":823,"mtime":1656676933720,"results":"9","hashOfConfig":"8"},{"size":836,"mtime":1656673275574,"results":"10","hashOfConfig":"8"},{"size":397,"mtime":1656675316110,"results":"11","hashOfConfig":"8"},{"size":800,"mtime":1656675827014,"results":"12","hashOfConfig":"8"},{"size":464,"mtime":1656671349162,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"a6tmqa",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\reacttut\\new\\src\\index.js",["34"],[],"D:\\reacttut\\new\\src\\App.js",["35","36","37","38"],[],"\nimport { NavLink } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport Main from './Main';\n\nfunction App() {\n  return (\n\n    <>\n\n      <BrowserRouter>\n\n        <div className=\"design\">\n          <NavLink exact to='/' style={({ isActive }) => ({color:isActive ? \"blue\" : \"white\"}) } > <a>home</a></NavLink>\n          <NavLink exact to='/about' style={({ isActive }) => ({ color: isActive ? \"blue\" : \"white\" })} > <a>about</a> </NavLink>\n          <NavLink exact to='/contact' style={({ isActive }) => ({ color: isActive ? \"blue\" : \"white\" })} > <a>contac</a> </NavLink>\n          <NavLink exact to='/search' > <a>search</a> </NavLink>\n        </div>\n\n        <Main />\n\n      </BrowserRouter>\n\n    </>\n\n  );\n}\n\nexport default App;\n","D:\\reacttut\\new\\src\\Main.jsx",[],[],"D:\\reacttut\\new\\src\\About.jsx",[],[],[],"D:\\reacttut\\new\\src\\Search.jsx",[],[],"D:\\reacttut\\new\\src\\Error.jsx",[],[],{"ruleId":"39","severity":1,"message":"40","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":15,"column":100,"nodeType":"45","endLine":15,"endColumn":103},{"ruleId":"43","severity":1,"message":"44","line":16,"column":107,"nodeType":"45","endLine":16,"endColumn":110},{"ruleId":"43","severity":1,"message":"44","line":17,"column":109,"nodeType":"45","endLine":17,"endColumn":112},{"ruleId":"43","severity":1,"message":"44","line":18,"column":41,"nodeType":"45","endLine":18,"endColumn":44},"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]